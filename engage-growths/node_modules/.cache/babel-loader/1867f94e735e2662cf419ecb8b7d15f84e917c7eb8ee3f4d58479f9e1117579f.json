{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nexport function getScrollbarWidth() {\n  // Creating invisible container\n  const outer = document.createElement('div');\n  outer.style.visibility = 'hidden';\n  outer.style.overflow = 'scroll'; // forcing scrollbar to appear\n  outer.style.msOverflowStyle = 'scrollbar'; // needed for WinJS apps\n  document.body.appendChild(outer);\n\n  // Creating inner element and placing it in the container\n  const inner = document.createElement('div');\n  outer.appendChild(inner);\n\n  // Calculating difference between container's full width and the child width\n  const scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n\n  // Removing temporary elements from the DOM\n  outer.parentNode.removeChild(outer);\n  return scrollbarWidth;\n}\nexport function useBodyScrollable() {\n  _s();\n  const [bodyScrollable, setBodyScrollable] = useState(document.body.scrollHeight > window.innerHeight);\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      setBodyScrollable(document.body.scrollHeight > window.innerHeight);\n    });\n    resizeObserver.observe(document.body);\n    return () => {\n      resizeObserver.unobserve(document.body);\n    };\n  }, []);\n  return bodyScrollable;\n}\n\n/* //* Add the following code to your root page displaying your elements \r\n  ///! Possible problem: screen takes one frame to adjust resulting in jitter\r\n\r\n    const scrollbarWidth = getScrollbarWidth()\r\n\r\n    const bodyScrollable = useBodyScrollable()\r\n\r\n    useEffect(() => {\r\n        if (bodyScrollable) {\r\n            document.body.style.paddingRight = '0px'\r\n        } else {\r\n            document.body.style.paddingRight = `${scrollbarWidth}px`\r\n        }\r\n    }, [bodyScrollable])\r\n\r\n*/\n_s(useBodyScrollable, \"5Y7a+6duBDYrNiH7uJLsBndc7vg=\");","map":{"version":3,"names":["useState","useEffect","getScrollbarWidth","outer","document","createElement","style","visibility","overflow","msOverflowStyle","body","appendChild","inner","scrollbarWidth","offsetWidth","parentNode","removeChild","useBodyScrollable","_s","bodyScrollable","setBodyScrollable","scrollHeight","window","innerHeight","resizeObserver","ResizeObserver","observe","unobserve"],"sources":["C:/Users/Matthew/Documents/Web Development/diminious-portfolio.github.io/web-projects/fe-engage-growths/engage-growths/src/scrollbar.js"],"sourcesContent":["import {useState, useEffect } from \"react\";\r\n\r\nexport function getScrollbarWidth() {\r\n\r\n    // Creating invisible container\r\n    const outer = document.createElement('div');\r\n    outer.style.visibility = 'hidden';\r\n    outer.style.overflow = 'scroll'; // forcing scrollbar to appear\r\n    outer.style.msOverflowStyle = 'scrollbar'; // needed for WinJS apps\r\n    document.body.appendChild(outer);\r\n  \r\n    // Creating inner element and placing it in the container\r\n    const inner = document.createElement('div');\r\n    outer.appendChild(inner);\r\n    \r\n    // Calculating difference between container's full width and the child width\r\n    const scrollbarWidth = (outer.offsetWidth - inner.offsetWidth);\r\n  \r\n    // Removing temporary elements from the DOM\r\n    outer.parentNode.removeChild(outer);\r\n  \r\n    return scrollbarWidth;\r\n      \r\n}\r\n\r\nexport function useBodyScrollable() {\r\n\tconst [bodyScrollable, setBodyScrollable] = useState(document.body.scrollHeight > window.innerHeight)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst resizeObserver = new ResizeObserver(() => {\r\n\t\t\tsetBodyScrollable(document.body.scrollHeight > window.innerHeight)\r\n\t\t})\r\n\t\tresizeObserver.observe(document.body)\r\n\t\treturn () => {\r\n\t\t\tresizeObserver.unobserve(document.body)\r\n\t\t}\r\n\t}, [])\r\n\r\n\treturn bodyScrollable;\r\n}\r\n\r\n/* //* Add the following code to your root page displaying your elements \r\n  ///! Possible problem: screen takes one frame to adjust resulting in jitter\r\n\r\n    const scrollbarWidth = getScrollbarWidth()\r\n\r\n    const bodyScrollable = useBodyScrollable()\r\n\r\n    useEffect(() => {\r\n        if (bodyScrollable) {\r\n            document.body.style.paddingRight = '0px'\r\n        } else {\r\n            document.body.style.paddingRight = `${scrollbarWidth}px`\r\n        }\r\n    }, [bodyScrollable])\r\n\r\n*/"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE1C,OAAO,SAASC,iBAAiBA,CAAA,EAAG;EAEhC;EACA,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC3CF,KAAK,CAACG,KAAK,CAACC,UAAU,GAAG,QAAQ;EACjCJ,KAAK,CAACG,KAAK,CAACE,QAAQ,GAAG,QAAQ,CAAC,CAAC;EACjCL,KAAK,CAACG,KAAK,CAACG,eAAe,GAAG,WAAW,CAAC,CAAC;EAC3CL,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,KAAK,CAAC;;EAEhC;EACA,MAAMS,KAAK,GAAGR,QAAQ,CAACC,aAAa,CAAC,KAAK,CAAC;EAC3CF,KAAK,CAACQ,WAAW,CAACC,KAAK,CAAC;;EAExB;EACA,MAAMC,cAAc,GAAIV,KAAK,CAACW,WAAW,GAAGF,KAAK,CAACE,WAAY;;EAE9D;EACAX,KAAK,CAACY,UAAU,CAACC,WAAW,CAACb,KAAK,CAAC;EAEnC,OAAOU,cAAc;AAEzB;AAEA,OAAO,SAASI,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAACI,QAAQ,CAACM,IAAI,CAACW,YAAY,GAAGC,MAAM,CAACC,WAAW,CAAC;EAErGtB,SAAS,CAAC,MAAM;IACf,MAAMuB,cAAc,GAAG,IAAIC,cAAc,CAAC,MAAM;MAC/CL,iBAAiB,CAAChB,QAAQ,CAACM,IAAI,CAACW,YAAY,GAAGC,MAAM,CAACC,WAAW,CAAC;IACnE,CAAC,CAAC;IACFC,cAAc,CAACE,OAAO,CAACtB,QAAQ,CAACM,IAAI,CAAC;IACrC,OAAO,MAAM;MACZc,cAAc,CAACG,SAAS,CAACvB,QAAQ,CAACM,IAAI,CAAC;IACxC,CAAC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOS,cAAc;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAfAD,EAAA,CAhBgBD,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}